{% extends '_layout/_profile.html.twig' %}
{% block title %}Настройки импорта{% endblock %}
{% block profile_body %}
    <div class="col-md-6">
        <h1>Категории Exprating</h1>
        <button type="button" class="btn btn-success" onclick="create_node()">Создать</button>
        <button type="button" class="btn btn-warning" onclick="rename_node()">Переименовать</button>

        <div id="treeCategory" class="well height-full"></div>
    </div>
    <div class="col-md-6">
        <h1>Категории irecommend</h1>
        <button type="button" class="btn btn-info" onclick="deselect_all_import()">Снять выделение</button>
        <div id="treeCategoryImport" class="well height-full"></div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('js/external/jstree.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('js/external/jquery.scrollTo.min.js') }}"></script>
    <script type="text/javascript">
        var selected_by_event = false;
        function create_node() {
            var ref = $('#treeCategory').jstree(true),
                    sel = ref.get_selected();
            if (!sel.length) {
                return false;
            }
            sel = sel[0];
            sel = ref.create_node(sel, {"type": "file"});
            if (sel) {
                ref.edit(sel);
            }
        }
        function rename_node() {
            var ref = $('#treeCategory').jstree(true),
                    sel = ref.get_selected();
            if (!sel.length) {
                return false;
            }
            sel = sel[0];
            node = ref.get_node(sel);
            ref.set_text(sel, node.a_attr.data_name);
            ref.edit(sel);
        }
        function deselect_all_import() {
            $('#treeCategoryImport').jstree(true).deselect_all();
        }
        $('#treeCategory').jstree({
            core: {
                check_callback: true,
                data: [
                    {% for category in categories %}
                    {% set parent_slug = category.parent.slug|default('#') %}
                    {% if category.parent.slug|default('#') == 'root' %}{% set parent_slug = '#' %}{% endif %}
                    {
                        id: '{{ category.slug }}',
                        parent: '{{ parent_slug }}',
                        text: '{{ category.name|raw }} <a href="{{ path("category_admin_categories", {"slug":category.slug}) }}" class="external"><span class="glyphicon glyphicon-edit"></span></a> <a href="{{ path("product_list", {"slug":category.slug, "peopleGroup": "dlya-vseh"}) }}" class="external"><span class="glyphicon glyphicon-share"></span></a>',
                        a_attr: {
                            href: '{{ path('category_admin_categories', {'slug': category.slug}) }}',
                            data_slug: '{{ category.slug }}',
                            data_path: '{{ categoryAssociate[category.slug] }}',
                            data_name: '{{ category.name|raw }}',
                            data_actions: '<a href="{{ path("category_admin_categories", {"slug":category.slug}) }}" class="external"><span class="glyphicon glyphicon-edit"></span></a> <a href="{{ path("product_list", {"slug":category.slug, "peopleGroup": "dlya-vseh"}) }}" class="external"><span class="glyphicon glyphicon-share"></span></a>',
                        },
                    },
                    {% endfor %}
                ]
            },
            plugins: ['dnd']
        }).on('select_node.jstree', function (node, selected, event) {
            var selected_nodes = $('#treeCategoryImport').jstree(true).get_selected();
            if (selected_nodes.length && !selected_by_event) {
                var category_slug = selected.node.id;
                var category_text = selected.node.text;
                console.log(selected.node.text);

                var alias_category_id = selected_nodes[0];
                var node = $('#treeCategoryImport').jstree(true).get_node(alias_category_id);
                if (confirm('Вы хотите поменять "' + node.a_attr.data_current_path + '" на "' + selected.node.a_attr.data_path + '"')) {
                    $.ajax('{{ path('admin_import_settings_change') }}', {
                        method: "POST",
                        data: {category_slug: category_slug, alias_category_id: alias_category_id},
                        success: function (data) {
                            var html = '<div class="message-box alert-success">' +
                                    '<span class="close">X</span>' +
                                    '<p>Изменения успешно сохранены</p>' +
                                    '</div>';
                            $('div.alert-message').html(html);
                            setTimeout(function () {
                                $('div.alert-message').html('');
                            }, 2000);
                            node.a_attr.data_relation = category_slug;
                            console.log(node.text);
                            var new_text = node.text.replace(/\(.*\)/g, '') + '(<span class="small text-success">' + selected.node.a_attr.data_path + '</span>)';
                            node.a_attr.data_current_path = selected.node.a_attr.data_path;
                            $('#treeCategoryImport').jstree(true).set_text(node, new_text);
                        }
                    });
                } else {
                    var dataRelation = node.a_attr.data_relation;
                    $('#treeCategory').jstree(true).deselect_all();
                    $('#treeCategory').jstree(true).close_all();
                    if (dataRelation) {
                        selected_by_event = true;
                        $('#treeCategory').jstree(true).select_node(dataRelation);
                        $('#treeCategory').stop(true).scrollTo('#' + dataRelation);
                        $('#treeCategory').jstree(true).open_node(dataRelation);
                    }
                }
            }
            selected_by_event = false;
        }).on('rename_node.jstree', function (event, entity) {
            var node = entity.node;
            if (confirm('Сохранить новое имя ' + entity.text + '?')) {
                node.a_attr.data_name = entity.text;
                var new_text = node.a_attr.data_name + ' ' + node.a_attr.data_actions;
                node.a_attr.data_path = node.a_attr.data_path.replace(entity.old, entity.text);
                $('#treeCategory').jstree(true).set_text(node, new_text);
            } else {
                $('#treeCategory').jstree(true).set_text(node, entity.old + ' ' + node.a_attr.data_actions);
            }
        }).on('move_node.jstree', function (e, data) {
            console.log(data);
            $.ajax({
                url: '{{ path("admin_category_move") }}',
                methot: 'post',
                data: {
                    category: data.node.id,
                    position: data.position,
                    parent: data.parent,
                },
                success: function () {
                    alert('saved');
                }
            })
        });
        $('#treeCategoryImport').jstree({
            core: {
                data: [
                    {% for category in categoriesImport %}
                    {% set categoryName = '' %}
                    {% set categoryNameHtml = '' %}
                    {% if category.aliasCategory %}
                    {% set categoryNameHtml = '(<span class="small text-success">' ~ categoryAssociate[category.aliasCategory.categoryExpratingId]|default(null) ~ '</span>)' %}
                    {% set categoryName = categoryAssociate[category.aliasCategory.categoryExpratingId]|default(null) %}
                    {% endif %}
                    {
                        id: '{{ category.id }}',
                        parent: '{{ category.parent.id|default('#') }}',
                        text: '{{ category.name|raw }} <a href="{{ category.url }}" class="external"><span class="glyphicon glyphicon-share"></span></a> {{ categoryNameHtml|raw }}',
                        opened: true,
                        a_attr: {
                            href: '#',
                            data_id: '{{ category.id }}',
                            data_relation: '{{ category.aliasCategory.categoryExpratingId|default(null) }}',
                            data_current_path: '{{ categoryName }}'
                        },
                        state: {
                            opened: true
                        }
                    },
                    {% endfor %}
                ]
            }
        }).on('select_node.jstree', function (node, selected, event) {
            var dataRelation = selected.node.a_attr.data_relation;
            $('#treeCategory').jstree(true).deselect_all();
            $('#treeCategory').jstree(true).close_all();
            if (dataRelation) {
                selected_by_event = true;
                $('#treeCategory').jstree(true).select_node(dataRelation);
                $('#treeCategory').stop(true).scrollTo('#' + dataRelation);
                $('#treeCategory').jstree(true).open_node(dataRelation);
            }
        });
        $(document).on('click', 'a.external', function () {
            var href = $(this).attr('href');
            window.open(href, '_blank');
        });
    </script>
{% endblock %}