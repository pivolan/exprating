#!/usr/bin/php

<?php $sphinxBaseDir = __DIR__.'/../../../var/sphinx';
if (!file_exists($sphinxBaseDir)) {
    mkdir($sphinxBaseDir, 0777, true);
    mkdir($sphinxBaseDir.'/data', 0777, true);
    mkdir($sphinxBaseDir.'/log', 0777, true);
}
use Symfony\Component\Yaml\Yaml;

include __DIR__.'/../../../vendor/autoload.php';
$yml = Yaml::parse(file_get_contents(__DIR__.'/../parameters.yml'));
?>
source expParentSouce
{
        type            = mysql
        sql_host        = <?=$yml['parameters']['database_host'];?>

        sql_user        = <?=$yml['parameters']['database_user'];?>

        sql_pass        = <?=$yml['parameters']['database_password'];?>

        sql_db          = <?=$yml['parameters']['database_name'];?>

        sql_port        = 3306
        # Для ускорения работы прописываем путь до MySQL-го UNIX-сокета (чтобы
        # операции с БД происходили не через TCP/IP стек сервера)
        #sql_sock        = /var/run/mysqld/mysqld.sock


        #mysql_connect_flags     = 32 # 32- включение сжатие при обмене данными с БД

        # Включам нужную кодировку соединения и выключаем кеш запросов
        sql_query_pre                   = SET NAMES utf8
        sql_query_pre                   = SET SESSION query_cache_type=OFF
        sql_ranged_throttle     = 0
        sql_range_step          = 20000
}

source expProduct : expParentSouce
{
	sql_query               = \
                SELECT product.id as id, product.name, 0 as content_type \
                FROM product AS product
    sql_attr_uint			= content_type
}

index expProductIdx
{
    docinfo         = extern
    # Используемые морфологические движки
    morphology      = stem_enru

    # Из данных источника HTML-код нужно вырезать
    html_strip      = 1

    source			= expProduct
	path			= <?php print ($sphinxBaseDir); ?>/data/expProduct
}

source expPartnerProduct : expParentSouce
{
	sql_query               = \
                SELECT product.hash as id, product.name, product.description, 1 as content_type \
                FROM offer AS product
    sql_attr_uint			= content_type
}

index expPartnerProductIdx
{
    docinfo         = extern
    # Используемые морфологические движки
    morphology      = stem_enru

    # Из данных источника HTML-код нужно вырезать
    html_strip      = 1

    source			= expPartnerProduct
	path			= <?php print ($sphinxBaseDir); ?>/data/expPartnerProduct
}

indexer
{
	mem_limit		= 512M
}

searchd
{
	listen			= sphinxserver:9312
	log				= <?php print ($sphinxBaseDir); ?>/log/searchd.log
#	query_log		= <?php print ($sphinxBaseDir); ?>/infoskidka/sphinx/log/query.log
	read_timeout	= 5
	max_children	= 50
	pid_file		= <?php print ($sphinxBaseDir); ?>/log/searchd.pid
	seamless_rotate	= 1
	preopen_indexes	= 1
	unlink_old		= 1
	workers			= threads # for RT to work
	binlog_path		= <?php print ($sphinxBaseDir); ?>/data
	#mem_limit       = 1024M
}

